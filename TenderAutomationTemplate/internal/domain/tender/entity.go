// üèõÔ∏è –î–û–ú–ï–ù–ù–ê–Ø –ú–û–î–ï–õ–¨ –¢–ï–ù–î–ï–†–ê –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
//
// –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–Ω–¥–µ—Ä –Ω–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏–∑ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö
// –∑–∞–∫—É–ø–æ—á–Ω—ã—Ö —Å–∏—Å—Ç–µ–º (zakupki.gov.ru, szvo.gov35.ru –∏ –¥—Ä.)

package tender

import (
	"errors"
	"fmt"
	"net/url"
	"strings"
	"time"
)

// üìã –û–°–ù–û–í–ù–ê–Ø –ú–û–î–ï–õ–¨ –¢–ï–ù–î–ï–†–ê
type Tender struct {
	// ‚úÖ –ë–∞–∑–æ–≤—ã–µ –ø–æ–ª—è
	ID        uint      `json:"id" db:"id"`
	CreatedAt time.Time `json:"created_at" db:"created_at"`
	UpdatedAt time.Time `json:"updated_at" db:"updated_at"`
	
	// üîç –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–µ–Ω–¥–µ—Ä–∞
	ExternalID     string `json:"external_id" db:"external_id"`         // ID –≤ —Å–∏—Å—Ç–µ–º–µ –∑–∞–∫—É–ø–æ–∫
	Number         string `json:"number" db:"number"`                   // –ù–æ–º–µ—Ä —Ç–µ–Ω–¥–µ—Ä–∞
	Platform       string `json:"platform" db:"platform"`              // zakupki.gov.ru, szvo.gov35.ru
	OriginalURL    string `json:"original_url" db:"original_url"`       // –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–Ω–¥–µ—Ä
	
	// üìÑ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
	Title          string    `json:"title" db:"title"`                 // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–Ω–¥–µ—Ä–∞
	Description    string    `json:"description" db:"description"`     // –û–ø–∏—Å–∞–Ω–∏–µ
	CustomerName   string    `json:"customer_name" db:"customer_name"` // –ó–∞–∫–∞–∑—á–∏–∫
	CustomerINN    string    `json:"customer_inn" db:"customer_inn"`   // –ò–ù–ù –∑–∞–∫–∞–∑—á–∏–∫–∞
	Region         string    `json:"region" db:"region"`               // –†–µ–≥–∏–æ–Ω
	
	// üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
	StartPrice     float64 `json:"start_price" db:"start_price"`         // –ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞
	Currency       string  `json:"currency" db:"currency"`               // –í–∞–ª—é—Ç–∞ (RUB)
	
	// üìÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏
	PublishedAt    time.Time  `json:"published_at" db:"published_at"`       // –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
	SubmissionEnd  time.Time  `json:"submission_end" db:"submission_end"`   // –û–∫–æ–Ω—á–∞–Ω–∏–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫
	TenderEnd      time.Time  `json:"tender_end" db:"tender_end"`           // –û–∫–æ–Ω—á–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤
	DeliveryPeriod int        `json:"delivery_period" db:"delivery_period"` // –°—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏ (–¥–Ω–∏)
	
	// üè• –°–ø–µ—Ü–∏—Ñ–∏–∫–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
	Category        TenderCategory `json:"category" db:"category"`               // –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–æ–≤
	IsMedical       bool          `json:"is_medical" db:"is_medical"`           // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
	IsEquipment     bool          `json:"is_equipment" db:"is_equipment"`       // –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ vs —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏
	IsGoods         bool          `json:"is_goods" db:"is_goods"`               // –ü–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ vs —É—Å–ª—É–≥
	
	// ü§ñ –ò–ò –∞–Ω–∞–ª–∏–∑
	AIRelevanceScore  float64        `json:"ai_relevance_score" db:"ai_relevance_score"`   // –û—Ü–µ–Ω–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –ò–ò (0-1)
	AIAnalysis        string         `json:"ai_analysis" db:"ai_analysis"`                 // –ê–Ω–∞–ª–∏–∑ –ò–ò –≤ JSON
	AIRecommendation  AIRecommendation `json:"ai_recommendation" db:"ai_recommendation"`   // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ò–ò
	
	// üìä –°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
	Status            TenderStatus `json:"status" db:"status"`                     // –°—Ç–∞—Ç—É—Å —Ç–µ–Ω–¥–µ—Ä–∞
	ProcessingStatus  ProcessingStatus `json:"processing_status" db:"processing_status"` // –°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
	DocumentsDownloaded bool       `json:"documents_downloaded" db:"documents_downloaded"` // –î–æ–∫—É–º–µ–Ω—Ç—ã —Å–∫–∞—á–∞–Ω—ã
	ProductsExtracted   bool       `json:"products_extracted" db:"products_extracted"`     // –¢–æ–≤–∞—Ä—ã –∏–∑–≤–ª–µ—á–µ–Ω—ã
	SuppliersContacted  bool       `json:"suppliers_contacted" db:"suppliers_contacted"`   // –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ –Ω–∞–π–¥–µ–Ω—ã
	
	// üìÑ –°–≤—è–∑–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
	DocumentsCount    int      `json:"documents_count" db:"documents_count"`       // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
	TechnicalTaskURL  string   `json:"technical_task_url" db:"technical_task_url"` // –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ—Ö–∑–∞–¥–∞–Ω–∏–µ
	DocumentURLs      []string `json:"document_urls" db:"-"`                       // –í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã (JSON –≤ –ë–î)
	
	// üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ–Ω–¥–µ—Ä–∞ (–∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è)
	WinnerCompany     string  `json:"winner_company" db:"winner_company"`         // –ö–æ–º–ø–∞–Ω–∏—è-–ø–æ–±–µ–¥–∏—Ç–µ–ª—å
	WinnerPrice       float64 `json:"winner_price" db:"winner_price"`             // –¶–µ–Ω–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
	WinnerDiscount    float64 `json:"winner_discount" db:"winner_discount"`       // –°–∫–∏–¥–∫–∞ (%)
	TotalParticipants int     `json:"total_participants" db:"total_participants"` // –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤
	
	// üîó –°–≤—è–∑–∏ —Å –¥—Ä—É–≥–∏–º–∏ —Å—É—â–Ω–æ—Å—Ç—è–º–∏
	Products         []TenderProduct `json:"products" db:"-"`           // –¢–æ–≤–∞—Ä—ã –≤ —Ç–µ–Ω–¥–µ—Ä–µ
	EmailCampaigns   []EmailCampaign `json:"email_campaigns" db:"-"`    // Email –∫–∞–º–ø–∞–Ω–∏–∏
	PriceAnalysis    *PriceAnalysis  `json:"price_analysis" db:"-"`     // –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω
}

// üìä –ï–ù–£–ú–´ –ò –ö–û–ù–°–¢–ê–ù–¢–´

type TenderCategory string

const (
	CategoryMedicalEquipment  TenderCategory = "medical_equipment"   // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
	CategoryMedicalSupplies   TenderCategory = "medical_supplies"    // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏
	CategoryLaboratoryEquip   TenderCategory = "laboratory_equipment" // –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
	CategoryDiagnosticEquip   TenderCategory = "diagnostic_equipment" // –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
	CategorySurgicalEquip     TenderCategory = "surgical_equipment"   // –•–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
	CategoryRehabilitationEquip TenderCategory = "rehabilitation_equipment" // –†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–æ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
	CategoryOther             TenderCategory = "other"               // –ü—Ä–æ—á–µ–µ
)

type TenderStatus string

const (
	StatusActive      TenderStatus = "active"       // –ê–∫—Ç–∏–≤–Ω—ã–π —Ç–µ–Ω–¥–µ—Ä
	StatusCompleted   TenderStatus = "completed"    // –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π —Ç–µ–Ω–¥–µ—Ä
	StatusCancelled   TenderStatus = "cancelled"    // –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–π —Ç–µ–Ω–¥–µ—Ä
	StatusPostponed   TenderStatus = "postponed"    // –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π —Ç–µ–Ω–¥–µ—Ä
)

type ProcessingStatus string

const (
	ProcessingNew           ProcessingStatus = "new"              // –ù–æ–≤—ã–π, –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
	ProcessingDiscovered    ProcessingStatus = "discovered"      // –ù–∞–π–¥–µ–Ω —Å–∫—Ä–∞–ø–µ—Ä–æ–º
	ProcessingAnalyzing     ProcessingStatus = "analyzing"       // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –ò–ò
	ProcessingDocuments     ProcessingStatus = "downloading_docs" // –°–∫–∞—á–∏–≤–∞—é—Ç—Å—è –¥–æ–∫—É–º–µ–Ω—Ç—ã
	ProcessingProducts      ProcessingStatus = "extracting_products" // –ò–∑–≤–ª–µ–∫–∞—é—Ç—Å—è —Ç–æ–≤–∞—Ä—ã
	ProcessingSuppliers     ProcessingStatus = "finding_suppliers"   // –ò—â—É—Ç—Å—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏
	ProcessingContacting    ProcessingStatus = "contacting_suppliers" // –°–≤—è–∑—å —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º–∏
	ProcessingCompleted     ProcessingStatus = "completed"       // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
	ProcessingFailed        ProcessingStatus = "failed"          // –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
	ProcessingSkipped       ProcessingStatus = "skipped"         // –ü—Ä–æ–ø—É—â–µ–Ω (–Ω–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω)
)

type AIRecommendation string

const (
	RecommendationParticipate AIRecommendation = "participate"    // –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ç–µ–Ω–¥–µ—Ä–µ
	RecommendationSkip        AIRecommendation = "skip"          // –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–Ω–¥–µ—Ä
	RecommendationAnalyze     AIRecommendation = "need_analysis" // –ù—É–∂–µ–Ω –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
	RecommendationWatchList   AIRecommendation = "watch_list"    // –î–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
)

// üè• –°–ü–ï–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –°–¢–†–£–ö–¢–£–†–´

// –¢–æ–≤–∞—Ä –≤ —Ç–µ–Ω–¥–µ—Ä–µ (—Å–≤—è–∑–∞–Ω —Å Product entity)
type TenderProduct struct {
	TenderID    uint    `json:"tender_id" db:"tender_id"`
	ProductID   uint    `json:"product_id" db:"product_id"`
	Quantity    int     `json:"quantity" db:"quantity"`
	Unit        string  `json:"unit" db:"unit"`         // —à—Ç, –∫–≥, –º, –ª
	MaxPrice    float64 `json:"max_price" db:"max_price"` // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É
	
	// –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–∑ —Ç–µ—Ö–∑–∞–¥–∞–Ω–∏—è
	Specifications string `json:"specifications" db:"specifications"` // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
	Requirements   string `json:"requirements" db:"requirements"`     // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
}

// Email –∫–∞–º–ø–∞–Ω–∏—è –¥–ª—è —Ç–µ–Ω–¥–µ—Ä–∞
type EmailCampaign struct {
	TenderID     uint      `json:"tender_id" db:"tender_id"`
	SupplierID   uint      `json:"supplier_id" db:"supplier_id"`
	SentAt       time.Time `json:"sent_at" db:"sent_at"`
	ResponseAt   *time.Time `json:"response_at" db:"response_at"`
	Status       string    `json:"status" db:"status"`    // sent, delivered, opened, replied
	OfferReceived bool     `json:"offer_received" db:"offer_received"`
}

// –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω –¥–ª—è —Ç–µ–Ω–¥–µ—Ä–∞
type PriceAnalysis struct {
	TenderID          uint      `json:"tender_id" db:"tender_id"`
	RecommendedPrice  float64   `json:"recommended_price" db:"recommended_price"`
	MinViablePrice    float64   `json:"min_viable_price" db:"min_viable_price"`
	MaxCompetitivePrice float64 `json:"max_competitive_price" db:"max_competitive_price"`
	WinProbability    float64   `json:"win_probability" db:"win_probability"`
	AnalysisDate      time.Time `json:"analysis_date" db:"analysis_date"`
	Confidence        float64   `json:"confidence" db:"confidence"` // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞
}

// üö® –î–û–ú–ï–ù–ù–´–ï –û–®–ò–ë–ö–ò
var (
	ErrInvalidTender        = errors.New("invalid tender data")
	ErrInvalidURL          = errors.New("invalid tender URL")
	ErrInvalidPrice        = errors.New("invalid price value")
	ErrInvalidDate         = errors.New("invalid date")
	ErrTenderNotFound      = errors.New("tender not found")
	ErrTenderExpired       = errors.New("tender submission period expired")
	ErrInvalidPlatform     = errors.New("unsupported tender platform")
	ErrEmptyTitle          = errors.New("tender title cannot be empty")
	ErrInvalidCategory     = errors.New("invalid tender category")
	ErrDocumentsNotReady   = errors.New("tender documents not downloaded yet")
)

// üè≠ –ö–û–ù–°–¢–†–£–ö–¢–û–† –¢–ï–ù–î–ï–†–ê
func NewTender(externalID, number, platform, originalURL, title string) (*Tender, error) {
	// –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
	if strings.TrimSpace(title) == "" {
		return nil, ErrEmptyTitle
	}
	
	if strings.TrimSpace(externalID) == "" {
		return nil, fmt.Errorf("external ID is required")
	}
	
	// –í–∞–ª–∏–¥–∞—Ü–∏—è URL
	if err := validateURL(originalURL); err != nil {
		return nil, err
	}
	
	// –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
	if err := validatePlatform(platform); err != nil {
		return nil, err
	}
	
	now := time.Now()
	
	return &Tender{
		ExternalID:       externalID,
		Number:          number,
		Platform:        platform,
		OriginalURL:     originalURL,
		Title:           strings.TrimSpace(title),
		Currency:        "RUB",
		Status:          StatusActive,
		ProcessingStatus: ProcessingNew,
		AIRecommendation: RecommendationAnalyze,
		CreatedAt:       now,
		UpdatedAt:       now,
	}, nil
}

// üîß –ú–ï–¢–û–î–´ –î–õ–Ø –ò–ó–ú–ï–ù–ï–ù–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø

// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –ò–ò
func (t *Tender) SetAIAnalysis(score float64, analysis string, recommendation AIRecommendation) error {
	if score < 0 || score > 1 {
		return fmt.Errorf("AI relevance score must be between 0 and 1")
	}
	
	t.AIRelevanceScore = score
	t.AIAnalysis = analysis
	t.AIRecommendation = recommendation
	t.UpdatedAt = time.Now()
	
	// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
	if recommendation == RecommendationSkip {
		t.ProcessingStatus = ProcessingSkipped
	}
	
	return nil
}

// –û—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å–∫–∞—á–∞–Ω—ã
func (t *Tender) MarkDocumentsDownloaded(documentURLs []string, technicalTaskURL string) {
	t.DocumentsDownloaded = true
	t.DocumentURLs = documentURLs
	t.DocumentsCount = len(documentURLs)
	t.TechnicalTaskURL = technicalTaskURL
	t.UpdatedAt = time.Now()
	
	if t.ProcessingStatus == ProcessingDocuments {
		t.ProcessingStatus = ProcessingProducts
	}
}

// –û—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ —Ç–æ–≤–∞—Ä—ã –∏–∑–≤–ª–µ—á–µ–Ω—ã
func (t *Tender) MarkProductsExtracted() {
	t.ProductsExtracted = true
	t.UpdatedAt = time.Now()
	
	if t.ProcessingStatus == ProcessingProducts {
		t.ProcessingStatus = ProcessingSuppliers
	}
}

// –û—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏ –Ω–∞–π–¥–µ–Ω—ã –∏ —Å–≤—è–∑—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
func (t *Tender) MarkSuppliersContacted() {
	t.SuppliersContacted = true
	t.UpdatedAt = time.Now()
	
	if t.ProcessingStatus == ProcessingContacting {
		t.ProcessingStatus = ProcessingCompleted
	}
}

// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ–Ω–¥–µ—Ä–∞
func (t *Tender) SetResults(winnerCompany string, winnerPrice float64, totalParticipants int) error {
	if winnerPrice < 0 {
		return ErrInvalidPrice
	}
	
	t.WinnerCompany = winnerCompany
	t.WinnerPrice = winnerPrice
	t.TotalParticipants = totalParticipants
	
	// –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å–∫–∏–¥–∫—É
	if t.StartPrice > 0 {
		t.WinnerDiscount = ((t.StartPrice - winnerPrice) / t.StartPrice) * 100
	}
	
	t.Status = StatusCompleted
	t.UpdatedAt = time.Now()
	
	return nil
}

// –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
func (t *Tender) UpdateProcessingStatus(status ProcessingStatus) {
	t.ProcessingStatus = status
	t.UpdatedAt = time.Now()
}

// üîç –ú–ï–¢–û–î–´ –ó–ê–ü–†–û–°–û–í

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ç–µ–Ω–¥–µ—Ä
func (t *Tender) IsActive() bool {
	return t.Status == StatusActive && time.Now().Before(t.SubmissionEnd)
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –ª–∏ –ø—Ä–∏–µ–º –∑–∞—è–≤–æ–∫
func (t *Tender) IsSubmissionClosed() bool {
	return time.Now().After(t.SubmissionEnd)
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω –ª–∏ —Ç–µ–Ω–¥–µ—Ä –¥–ª—è —É—á–∞—Å—Ç–∏—è
func (t *Tender) IsRelevant() bool {
	return t.IsMedical && 
		   t.IsGoods && 
		   t.AIRelevanceScore >= 0.7 &&
		   t.AIRecommendation == RecommendationParticipate
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≥–æ—Ç–æ–≤ –ª–∏ —Ç–µ–Ω–¥–µ—Ä –¥–ª—è —É—á–∞—Å—Ç–∏—è
func (t *Tender) IsReadyForParticipation() bool {
	return t.DocumentsDownloaded &&
		   t.ProductsExtracted &&
		   t.SuppliersContacted &&
		   t.ProcessingStatus == ProcessingCompleted
}

// –ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫
func (t *Tender) TimeUntilSubmissionEnd() time.Duration {
	return time.Until(t.SubmissionEnd)
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É—á–∞—Å—Ç–∏—è
func (t *Tender) HasSufficientTime(minDays int) bool {
	return t.TimeUntilSubmissionEnd() > time.Duration(minDays)*24*time.Hour
}

// üîß –ü–†–ò–í–ê–¢–ù–´–ï –§–£–ù–ö–¶–ò–ò –í–ê–õ–ò–î–ê–¶–ò–ò

func validateURL(rawURL string) error {
	if rawURL == "" {
		return ErrInvalidURL
	}
	
	u, err := url.Parse(rawURL)
	if err != nil {
		return fmt.Errorf("%w: %v", ErrInvalidURL, err)
	}
	
	if u.Scheme == "" || u.Host == "" {
		return ErrInvalidURL
	}
	
	return nil
}

func validatePlatform(platform string) error {
	validPlatforms := map[string]bool{
		"zakupki.gov.ru":    true,
		"szvo.gov35.ru":     true,
		"gz-spb.ru":         true,
		"gz-nn.ru":          true,
		"gz.mos.ru":         true,
		"aggregator-kkr.ru": true,
		"roseltorg.ru":      true,
		"b2b-center.ru":     true,
		"sberbank-ast.ru":   true,
		"fabrikant.ru":      true,
	}
	
	if !validPlatforms[platform] {
		return ErrInvalidPlatform
	}
	
	return nil
}

// üìä –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò

// –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è UI
func (s TenderStatus) Color() string {
	switch s {
	case StatusActive:
		return "green"
	case StatusCompleted:
		return "blue"
	case StatusCancelled:
		return "red"
	case StatusPostponed:
		return "yellow"
	default:
		return "gray"
	}
}

// –ü–æ–ª—É—á–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
func (c TenderCategory) DisplayName() string {
	switch c {
	case CategoryMedicalEquipment:
		return "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
	case CategoryMedicalSupplies:
		return "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏"
	case CategoryLaboratoryEquip:
		return "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
	case CategoryDiagnosticEquip:
		return "–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
	case CategorySurgicalEquip:
		return "–•–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
	case CategoryRehabilitationEquip:
		return "–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–æ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
	default:
		return "–ü—Ä–æ—á–µ–µ"
	}
}

// –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
func (p ProcessingStatus) Progress() int {
	switch p {
	case ProcessingNew:
		return 0
	case ProcessingDiscovered:
		return 10
	case ProcessingAnalyzing:
		return 20
	case ProcessingDocuments:
		return 40
	case ProcessingProducts:
		return 60
	case ProcessingSuppliers:
		return 80
	case ProcessingContacting:
		return 90
	case ProcessingCompleted:
		return 100
	case ProcessingFailed, ProcessingSkipped:
		return 0
	default:
		return 0
	}
}
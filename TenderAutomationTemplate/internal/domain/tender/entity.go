// üèõÔ∏è –î–û–ú–ï–ù–ù–ê–Ø –ú–û–î–ï–õ–¨ –¢–ï–ù–î–ï–†–ê –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
//
// –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–Ω–¥–µ—Ä –Ω–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏–∑ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö
// –∑–∞–∫—É–ø–æ—á–Ω—ã—Ö —Å–∏—Å—Ç–µ–º (zakupki.gov.ru, szvo.gov35.ru –∏ –¥—Ä.)

package tender

import (
	"errors"
	"fmt"
	"net/url"
	"strings"
	"time"
)

// TODO: –û—Å–Ω–æ–≤–Ω–∞—è –¥–æ–º–µ–Ω–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å —Ç–µ–Ω–¥–µ—Ä–∞
// –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —á–∏—Å—Ç—É—é –¥–æ–º–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö —Å–∏—Å—Ç–µ–º
// –°–æ–¥–µ—Ä–∂–∏—Ç –≤—Å—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å —Ç–µ–Ω–¥–µ—Ä–æ–º
type Tender struct {
	// TODO: –ë–∞–∑–æ–≤—ã–µ –ø–æ–ª—è —Ç–µ–Ω–¥–µ—Ä–∞
	ID          uint      `json:"id"`
	TenderID    string    `json:"tender_id"`    // –ù–æ–º–µ—Ä —Ç–µ–Ω–¥–µ—Ä–∞ –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ
	Title       string    `json:"title"`        // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–Ω–¥–µ—Ä–∞
	Description string    `json:"description"`  // –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫—É–ø–∫–∏
	Platform    string    `json:"platform"`     // –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ (zakupki, szvo, spb)
	URL         string    `json:"url"`          // –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–Ω–¥–µ—Ä

	// TODO: –ó–∞–∫–∞–∑—á–∏–∫ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
	Customer        string `json:"customer"`         // –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑—á–∏–∫–∞
	CustomerINN     string `json:"customer_inn"`     // –ò–ù–ù –∑–∞–∫–∞–∑—á–∏–∫–∞
	CustomerAddress string `json:"customer_address"` // –ê–¥—Ä–µ—Å –∑–∞–∫–∞–∑—á–∏–∫–∞
	ContactPerson   string `json:"contact_person"`   // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ
	ContactPhone    string `json:"contact_phone"`    // –¢–µ–ª–µ—Ñ–æ–Ω
	ContactEmail    string `json:"contact_email"`    // Email

	// TODO: –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
	StartPrice    float64 `json:"start_price"`    // –ù–∞—á–∞–ª—å–Ω–∞—è (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è) —Ü–µ–Ω–∞
	Currency      string  `json:"currency"`       // –í–∞–ª—é—Ç–∞ (–æ–±—ã—á–Ω–æ RUB)
	PriceType     string  `json:"price_type"`     // –¢–∏–ø —Ü–µ–Ω—ã (–∑–∞ –≤–µ—Å—å –æ–±—ä–µ–º/–∑–∞ –µ–¥–∏–Ω–∏—Ü—É)
	VAT           bool    `json:"vat"`            // –ù–î–° –≤–∫–ª—é—á–µ–Ω/–∏—Å–∫–ª—é—á–µ–Ω
	EstimatedCost float64 `json:"estimated_cost"` // –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å

	// TODO: –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏
	PublishedAt        time.Time  `json:"published_at"`        // –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
	ApplicationDeadline time.Time `json:"application_deadline"` // –î–µ–¥–ª–∞–π–Ω –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫
	ContractStartDate  *time.Time `json:"contract_start_date"` // –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ—Å—Ç–∞–≤–∫–∏
	ContractEndDate    *time.Time `json:"contract_end_date"`   // –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∏
	AuctionDate        *time.Time `json:"auction_date"`        // –î–∞—Ç–∞ –∞—É–∫—Ü–∏–æ–Ω–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)

	// TODO: –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–µ–≥–∏
	Category       string   `json:"category"`        // –û—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
	Subcategory    string   `json:"subcategory"`     // –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è
	Keywords       []string `json:"keywords"`        // –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
	Tags           []string `json:"tags"`            // –¢–µ–≥–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
	ProductTypes   []string `json:"product_types"`   // –¢–∏–ø—ã –ø—Ä–æ–¥—É–∫—Ü–∏–∏
	MedicalCategory string  `json:"medical_category"` // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è

	// TODO: –°—Ç–∞—Ç—É—Å —Ç–µ–Ω–¥–µ—Ä–∞
	Status           TenderStatus `json:"status"`            // –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
	ProcessingStage  string       `json:"processing_stage"`  // –≠—Ç–∞–ø –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ
	ParticipantCount int          `json:"participant_count"` // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
	IsActive         bool         `json:"is_active"`         // –ê–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ç–µ–Ω–¥–µ—Ä

	// TODO: AI –∞–Ω–∞–ª–∏–∑
	AIRelevanceScore    float64           `json:"ai_relevance_score"`    // –û—Ü–µ–Ω–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ (0-1)
	AIRecommendation    AIRecommendation  `json:"ai_recommendation"`     // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ò–ò
	AIConfidenceLevel   float64           `json:"ai_confidence_level"`   // –£—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –ò–ò
	AIAnalysisReason    string            `json:"ai_analysis_reason"`    // –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞
	CompetitionLevel    CompetitionLevel  `json:"competition_level"`     // –£—Ä–æ–≤–µ–Ω—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏
	RiskFactors         []string          `json:"risk_factors"`          // –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ —Ä–∏—Å–∫–∏
	Opportunities       []string          `json:"opportunities"`         // –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

	// TODO: –î–æ–∫—É–º–µ–Ω—Ç—ã
	DocumentsURL       string    `json:"documents_url"`       // –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã
	DocumentsCount     int       `json:"documents_count"`     // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
	TechnicalTaskFound bool      `json:"technical_task_found"` // –ù–∞–π–¥–µ–Ω–æ –ª–∏ —Ç–µ—Ö–∑–∞–¥–∞–Ω–∏–µ
	DocumentsProcessed bool      `json:"documents_processed"` // –û–±—Ä–∞–±–æ—Ç–∞–Ω—ã –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã
	LastDocumentCheck  time.Time `json:"last_document_check"` // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

	// TODO: –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
	ProductsExtracted     bool `json:"products_extracted"`      // –ò–∑–≤–ª–µ—á–µ–Ω—ã –ª–∏ —Ç–æ–≤–∞—Ä—ã
	ProductsCount         int  `json:"products_count"`          // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
	ProductExtractionDate *time.Time `json:"product_extraction_date"` // –î–∞—Ç–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è

	// TODO: –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ –∏ —Ü–µ–Ω—ã
	SuppliersFound       bool       `json:"suppliers_found"`       // –ù–∞–π–¥–µ–Ω—ã –ª–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏
	SuppliersCount       int        `json:"suppliers_count"`       // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
	EmailCampaignSent    bool       `json:"email_campaign_sent"`   // –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ª–∏ email –∫–∞–º–ø–∞–Ω–∏—è
	EmailResponsesCount  int        `json:"email_responses_count"` // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤
	LastEmailSent        *time.Time `json:"last_email_sent"`       // –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–∏—Å—å–º–∞
	OptimalPriceCalculated bool     `json:"optimal_price_calculated"` // –†–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –ª–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞
	RecommendedPrice     *float64   `json:"recommended_price"`     // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ü–µ–Ω–∞ –¥–ª—è —É—á–∞—Å—Ç–∏—è

	// TODO: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—á–∞—Å—Ç–∏—è
	ParticipationDecision string     `json:"participation_decision"` // –†–µ—à–µ–Ω–∏–µ –æ–± —É—á–∞—Å—Ç–∏–∏ (yes/no/pending)
	ApplicationSubmitted  bool       `json:"application_submitted"`  // –ü–æ–¥–∞–Ω–∞ –ª–∏ –∑–∞—è–≤–∫–∞
	WinProbability       float64    `json:"win_probability"`        // –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–∏–≥—Ä—ã—à–∞ (0-1)
	ActualResult         *string    `json:"actual_result"`          // –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (won/lost/cancelled)
	WinnerPrice          *float64   `json:"winner_price"`           // –¶–µ–Ω–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
	ResultAnalyzed       bool       `json:"result_analyzed"`        // –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç

	// TODO: –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
	CreatedAt time.Time  `json:"created_at"` // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ —Å–∏—Å—Ç–µ–º–µ
	UpdatedAt time.Time  `json:"updated_at"` // –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
	DeletedAt *time.Time `json:"deleted_at"` // –î–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è (soft delete)
	
	// TODO: –°–≤—è–∑–∏ —Å –¥—Ä—É–≥–∏–º–∏ —Å—É—â–Ω–æ—Å—Ç—è–º–∏ (–±—É–¥—É—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏)
	// Products []Product - —Ç–æ–≤–∞—Ä—ã –∏–∑ —Ç–µ—Ö–∑–∞–¥–∞–Ω–∏—è
	// Suppliers []Supplier - –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏  
	// EmailCampaigns []EmailCampaign - email –∫–∞–º–ø–∞–Ω–∏–∏
	// Documents []Document - –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
}

// TODO: –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ —Ç–µ–Ω–¥–µ—Ä–∞
type TenderStatus string

const (
	// TODO: –°—Ç–∞—Ç—É—Å—ã –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∑–∞–∫—É–ø–æ—á–Ω–æ–π –ø–ª–æ—â–∞–¥–∫–∏
	TenderStatusPublished    TenderStatus = "published"     // –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω
	TenderStatusApplications TenderStatus = "applications"  // –ü—Ä–∏–µ–º –∑–∞—è–≤–æ–∫
	TenderStatusAuction      TenderStatus = "auction"       // –ê—É–∫—Ü–∏–æ–Ω
	TenderStatusEvaluation   TenderStatus = "evaluation"    // –†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫
	TenderStatusCompleted    TenderStatus = "completed"     // –ó–∞–≤–µ—Ä—à–µ–Ω
	TenderStatusCancelled    TenderStatus = "cancelled"     // –û—Ç–º–µ–Ω–µ–Ω

	// TODO: –°—Ç–∞—Ç—É—Å—ã –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ
	TenderStatusNew              TenderStatus = "new"                // –ù–æ–≤—ã–π —Ç–µ–Ω–¥–µ—Ä
	TenderStatusAIAnalysis       TenderStatus = "ai_analysis"        // AI –∞–Ω–∞–ª–∏–∑
	TenderStatusDocumentsPending TenderStatus = "documents_pending"  // –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
	TenderStatusProcessing       TenderStatus = "processing"         // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
	TenderStatusSupplierSearch   TenderStatus = "supplier_search"    // –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
	TenderStatusEmailCampaign    TenderStatus = "email_campaign"     // Email –∫–∞–º–ø–∞–Ω–∏—è
	TenderStatusPriceAnalysis    TenderStatus = "price_analysis"     // –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω
	TenderStatusReady            TenderStatus = "ready"              // –ì–æ—Ç–æ–≤ –∫ —É—á–∞—Å—Ç–∏—é
	TenderStatusParticipating    TenderStatus = "participating"      // –£—á–∞—Å—Ç–≤—É–µ–º
	TenderStatusResultsPending   TenderStatus = "results_pending"    // –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
	TenderStatusResultsAnalyzed  TenderStatus = "results_analyzed"   // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
	TenderStatusArchived         TenderStatus = "archived"           // –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω
)

// TODO: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ AI –ø–æ —É—á–∞—Å—Ç–∏—é –≤ —Ç–µ–Ω–¥–µ—Ä–µ
type AIRecommendation string

const (
	AIRecommendationParticipate AIRecommendation = "participate" // –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å
	AIRecommendationSkip        AIRecommendation = "skip"        // –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
	AIRecommendationAnalyze     AIRecommendation = "analyze"     // –¢—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
	AIRecommendationWatchlist   AIRecommendation = "watchlist"   // –î–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
)

// TODO: –£—Ä–æ–≤–µ–Ω—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏ –≤ —Ç–µ–Ω–¥–µ—Ä–µ
type CompetitionLevel string

const (
	CompetitionLevelLow    CompetitionLevel = "low"    // –ù–∏–∑–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è (1-3 —É—á–∞—Å—Ç–Ω–∏–∫–∞)
	CompetitionLevelMedium CompetitionLevel = "medium" // –°—Ä–µ–¥–Ω—è—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è (4-7 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
	CompetitionLevelHigh   CompetitionLevel = "high"   // –í—ã—Å–æ–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è (8+ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
)

// TODO: –ë–∏–∑–Ω–µ—Å-–º–µ—Ç–æ–¥—ã –¥–æ–º–µ–Ω–Ω–æ–π —Å—É—â–Ω–æ—Å—Ç–∏

// IsActive –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ç–µ–Ω–¥–µ—Ä (–º–æ–∂–Ω–æ –ª–∏ –µ—â–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É)
func (t *Tender) IsActiveForParticipation() bool {
	now := time.Now()
	return t.IsActive && 
		   t.ApplicationDeadline.After(now) && 
		   (t.Status == TenderStatusPublished || t.Status == TenderStatusApplications)
}

// DaysUntilDeadline –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫
func (t *Tender) DaysUntilDeadline() int {
	if t.ApplicationDeadline.IsZero() {
		return -1
	}
	duration := t.ApplicationDeadline.Sub(time.Now())
	return int(duration.Hours() / 24)
}

// IsHighPriority –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–Ω–¥–µ—Ä –≤—ã—Å–æ–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–º
func (t *Tender) IsHighPriority() bool {
	return t.AIRelevanceScore >= 0.8 && 
		   t.StartPrice >= 1000000 && // >= 1 –º–ª–Ω —Ä—É–±–ª–µ–π
		   t.DaysUntilDeadline() >= 7 && // >= 7 –¥–Ω–µ–π –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞
		   t.CompetitionLevel != CompetitionLevelHigh
}

// CanProcessDocuments –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã
func (t *Tender) CanProcessDocuments() bool {
	return t.AIRelevanceScore >= 0.7 && 
		   t.DocumentsURL != "" && 
		   !t.DocumentsProcessed
}

// ShouldStartEmailCampaign –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—Ç–æ–∏—Ç –ª–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å email –∫–∞–º–ø–∞–Ω–∏—é
func (t *Tender) ShouldStartEmailCampaign() bool {
	return t.ProductsExtracted && 
		   t.SuppliersFound && 
		   !t.EmailCampaignSent &&
		   t.DaysUntilDeadline() >= 3 // –ú–∏–Ω–∏–º—É–º 3 –¥–Ω—è –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞
}

// CalculateWinProbability —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–∏–≥—Ä—ã—à–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
func (t *Tender) CalculateWinProbability() float64 {
	// TODO: –°–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –≤—ã–∏–≥—Ä—ã—à–∞
	// –£—á–∏—Ç—ã–≤–∞–µ—Ç:
	// - AI –æ—Ü–µ–Ω–∫—É —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
	// - –£—Ä–æ–≤–µ–Ω—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏
	// - –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ü–µ–Ω—ã
	// - –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
	// - –ö–∞—á–µ—Å—Ç–≤–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
	
	probability := t.AIRelevanceScore * 0.3 // 30% - —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
	
	// –£—á–∏—Ç—ã–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏
	switch t.CompetitionLevel {
	case CompetitionLevelLow:
		probability += 0.4 // +40% –∑–∞ –Ω–∏–∑–∫—É—é –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—é
	case CompetitionLevelMedium:
		probability += 0.2 // +20% –∑–∞ —Å—Ä–µ–¥–Ω—é—é –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—é
	case CompetitionLevelHigh:
		probability += 0.0 // –í—ã—Å–æ–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç
	}
	
	// –£—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã
	if t.OptimalPriceCalculated {
		probability += 0.3 // +30% –∑–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ü–µ–Ω—É
	}
	
	// –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [0, 1]
	if probability > 1.0 {
		probability = 1.0
	}
	if probability < 0.0 {
		probability = 0.0
	}
	
	return probability
}

// GetRiskLevel –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ —É—á–∞—Å—Ç–∏—è
func (t *Tender) GetRiskLevel() string {
	riskCount := len(t.RiskFactors)
	
	switch {
	case riskCount == 0:
		return "low"
	case riskCount <= 2:
		return "medium"
	default:
		return "high"
	}
}

// ShouldParticipate –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ä–µ—à–µ–Ω–∏–µ –æ–± —É—á–∞—Å—Ç–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
func (t *Tender) ShouldParticipate() bool {
	// TODO: –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è
	// –î–æ–ª–∂–Ω–∞ —É—á–∏—Ç—ã–≤–∞—Ç—å:
	// - AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
	// - –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–∏–≥—Ä—ã—à–∞
	// - –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞
	// - –§–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
	// - –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ü–µ–ª–∏ –∫–æ–º–ø–∞–Ω–∏–∏
	
	if t.AIRecommendation == AIRecommendationSkip {
		return false
	}
	
	if t.AIRecommendation == AIRecommendationParticipate && 
	   t.CalculateWinProbability() >= 0.6 &&
	   t.GetRiskLevel() != "high" {
		return true
	}
	
	return false
}

// UpdateStatus –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Ç–µ–Ω–¥–µ—Ä–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
func (t *Tender) UpdateStatus(newStatus TenderStatus) error {
	// TODO: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Å—Ç–∞—Ç—É—Å–∞–º–∏
	// –ù–∞–ø—Ä–∏–º–µ—Ä: new -> ai_analysis -> documents_pending -> processing –∏ —Ç.–¥.
	
	validTransitions := map[TenderStatus][]TenderStatus{
		TenderStatusNew: {TenderStatusAIAnalysis, TenderStatusCancelled},
		TenderStatusAIAnalysis: {TenderStatusDocumentsPending, TenderStatusArchived},
		TenderStatusDocumentsPending: {TenderStatusProcessing, TenderStatusArchived},
		// ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã
	}
	
	if allowedStatuses, exists := validTransitions[t.Status]; exists {
		for _, allowedStatus := range allowedStatuses {
			if allowedStatus == newStatus {
				t.Status = newStatus
				t.UpdatedAt = time.Now()
				return nil
			}
		}
	}
	
	return fmt.Errorf("invalid status transition from %s to %s", t.Status, newStatus)
}

// TODO: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏
// - –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–µ–Ω–¥–µ—Ä–∞
// - –†–∞—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
// - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤
// - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏
// - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –∞–ª–µ—Ä—Ç—ã

// Validate –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö —Ç–µ–Ω–¥–µ—Ä–∞
func (t *Tender) Validate() error {
	// TODO: –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π —Ç–µ–Ω–¥–µ—Ä–∞
	if t.TenderID == "" {
		return fmt.Errorf("tender ID is required")
	}
	
	if t.Title == "" {
		return fmt.Errorf("tender title is required")
	}
	
	if t.Platform == "" {
		return fmt.Errorf("platform is required")
	}
	
	if t.StartPrice < 0 {
		return fmt.Errorf("start price cannot be negative")
	}
	
	if t.ApplicationDeadline.Before(time.Now()) {
		return fmt.Errorf("application deadline cannot be in the past")
	}
	
	return nil
}

// üìä –ï–ù–£–ú–´ –ò –ö–û–ù–°–¢–ê–ù–¢–´

type TenderCategory string

const (
	CategoryMedicalEquipment  TenderCategory = "medical_equipment"   // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
	CategoryMedicalSupplies   TenderCategory = "medical_supplies"    // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏
	CategoryLaboratoryEquip   TenderCategory = "laboratory_equipment" // –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
	CategoryDiagnosticEquip   TenderCategory = "diagnostic_equipment" // –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
	CategorySurgicalEquip     TenderCategory = "surgical_equipment"   // –•–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
	CategoryRehabilitationEquip TenderCategory = "rehabilitation_equipment" // –†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–æ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
	CategoryOther             TenderCategory = "other"               // –ü—Ä–æ—á–µ–µ
)

type TenderStatus string

const (
	StatusActive      TenderStatus = "active"       // –ê–∫—Ç–∏–≤–Ω—ã–π —Ç–µ–Ω–¥–µ—Ä
	StatusCompleted   TenderStatus = "completed"    // –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π —Ç–µ–Ω–¥–µ—Ä
	StatusCancelled   TenderStatus = "cancelled"    // –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–π —Ç–µ–Ω–¥–µ—Ä
	StatusPostponed   TenderStatus = "postponed"    // –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π —Ç–µ–Ω–¥–µ—Ä
)

type ProcessingStatus string

const (
	ProcessingNew           ProcessingStatus = "new"              // –ù–æ–≤—ã–π, –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
	ProcessingDiscovered    ProcessingStatus = "discovered"      // –ù–∞–π–¥–µ–Ω —Å–∫—Ä–∞–ø–µ—Ä–æ–º
	ProcessingAnalyzing     ProcessingStatus = "analyzing"       // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –ò–ò
	ProcessingDocuments     ProcessingStatus = "downloading_docs" // –°–∫–∞—á–∏–≤–∞—é—Ç—Å—è –¥–æ–∫—É–º–µ–Ω—Ç—ã
	ProcessingProducts      ProcessingStatus = "extracting_products" // –ò–∑–≤–ª–µ–∫–∞—é—Ç—Å—è —Ç–æ–≤–∞—Ä—ã
	ProcessingSuppliers     ProcessingStatus = "finding_suppliers"   // –ò—â—É—Ç—Å—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏
	ProcessingContacting    ProcessingStatus = "contacting_suppliers" // –°–≤—è–∑—å —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º–∏
	ProcessingCompleted     ProcessingStatus = "completed"       // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
	ProcessingFailed        ProcessingStatus = "failed"          // –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
	ProcessingSkipped       ProcessingStatus = "skipped"         // –ü—Ä–æ–ø—É—â–µ–Ω (–Ω–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω)
)

type AIRecommendation string

const (
	RecommendationParticipate AIRecommendation = "participate"    // –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ç–µ–Ω–¥–µ—Ä–µ
	RecommendationSkip        AIRecommendation = "skip"          // –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–Ω–¥–µ—Ä
	RecommendationAnalyze     AIRecommendation = "need_analysis" // –ù—É–∂–µ–Ω –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
	RecommendationWatchList   AIRecommendation = "watch_list"    // –î–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
)

// üè• –°–ü–ï–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –°–¢–†–£–ö–¢–£–†–´

// –¢–æ–≤–∞—Ä –≤ —Ç–µ–Ω–¥–µ—Ä–µ (—Å–≤—è–∑–∞–Ω —Å Product entity)
type TenderProduct struct {
	TenderID    uint    `json:"tender_id" db:"tender_id"`
	ProductID   uint    `json:"product_id" db:"product_id"`
	Quantity    int     `json:"quantity" db:"quantity"`
	Unit        string  `json:"unit" db:"unit"`         // —à—Ç, –∫–≥, –º, –ª
	MaxPrice    float64 `json:"max_price" db:"max_price"` // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É
	
	// –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–∑ —Ç–µ—Ö–∑–∞–¥–∞–Ω–∏—è
	Specifications string `json:"specifications" db:"specifications"` // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
	Requirements   string `json:"requirements" db:"requirements"`     // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
}

// Email –∫–∞–º–ø–∞–Ω–∏—è –¥–ª—è —Ç–µ–Ω–¥–µ—Ä–∞
type EmailCampaign struct {
	TenderID     uint      `json:"tender_id" db:"tender_id"`
	SupplierID   uint      `json:"supplier_id" db:"supplier_id"`
	SentAt       time.Time `json:"sent_at" db:"sent_at"`
	ResponseAt   *time.Time `json:"response_at" db:"response_at"`
	Status       string    `json:"status" db:"status"`    // sent, delivered, opened, replied
	OfferReceived bool     `json:"offer_received" db:"offer_received"`
}

// –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω –¥–ª—è —Ç–µ–Ω–¥–µ—Ä–∞
type PriceAnalysis struct {
	TenderID          uint      `json:"tender_id" db:"tender_id"`
	RecommendedPrice  float64   `json:"recommended_price" db:"recommended_price"`
	MinViablePrice    float64   `json:"min_viable_price" db:"min_viable_price"`
	MaxCompetitivePrice float64 `json:"max_competitive_price" db:"max_competitive_price"`
	WinProbability    float64   `json:"win_probability" db:"win_probability"`
	AnalysisDate      time.Time `json:"analysis_date" db:"analysis_date"`
	Confidence        float64   `json:"confidence" db:"confidence"` // –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞
}

// üö® –î–û–ú–ï–ù–ù–´–ï –û–®–ò–ë–ö–ò
var (
	ErrInvalidTender        = errors.New("invalid tender data")
	ErrInvalidURL          = errors.New("invalid tender URL")
	ErrInvalidPrice        = errors.New("invalid price value")
	ErrInvalidDate         = errors.New("invalid date")
	ErrTenderNotFound      = errors.New("tender not found")
	ErrTenderExpired       = errors.New("tender submission period expired")
	ErrInvalidPlatform     = errors.New("unsupported tender platform")
	ErrEmptyTitle          = errors.New("tender title cannot be empty")
	ErrInvalidCategory     = errors.New("invalid tender category")
	ErrDocumentsNotReady   = errors.New("tender documents not downloaded yet")
)

// üè≠ –ö–û–ù–°–¢–†–£–ö–¢–û–† –¢–ï–ù–î–ï–†–ê
func NewTender(externalID, number, platform, originalURL, title string) (*Tender, error) {
	// –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
	if strings.TrimSpace(title) == "" {
		return nil, ErrEmptyTitle
	}
	
	if strings.TrimSpace(externalID) == "" {
		return nil, fmt.Errorf("external ID is required")
	}
	
	// –í–∞–ª–∏–¥–∞—Ü–∏—è URL
	if err := validateURL(originalURL); err != nil {
		return nil, err
	}
	
	// –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
	if err := validatePlatform(platform); err != nil {
		return nil, err
	}
	
	now := time.Now()
	
	return &Tender{
		ExternalID:       externalID,
		Number:          number,
		Platform:        platform,
		OriginalURL:     originalURL,
		Title:           strings.TrimSpace(title),
		Currency:        "RUB",
		Status:          StatusActive,
		ProcessingStatus: ProcessingNew,
		AIRecommendation: RecommendationAnalyze,
		CreatedAt:       now,
		UpdatedAt:       now,
	}, nil
}

// üîß –ú–ï–¢–û–î–´ –î–õ–Ø –ò–ó–ú–ï–ù–ï–ù–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø

// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –ò–ò
func (t *Tender) SetAIAnalysis(score float64, analysis string, recommendation AIRecommendation) error {
	if score < 0 || score > 1 {
		return fmt.Errorf("AI relevance score must be between 0 and 1")
	}
	
	t.AIRelevanceScore = score
	t.AIAnalysis = analysis
	t.AIRecommendation = recommendation
	t.UpdatedAt = time.Now()
	
	// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
	if recommendation == RecommendationSkip {
		t.ProcessingStatus = ProcessingSkipped
	}
	
	return nil
}

// –û—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å–∫–∞—á–∞–Ω—ã
func (t *Tender) MarkDocumentsDownloaded(documentURLs []string, technicalTaskURL string) {
	t.DocumentsDownloaded = true
	t.DocumentURLs = documentURLs
	t.DocumentsCount = len(documentURLs)
	t.TechnicalTaskURL = technicalTaskURL
	t.UpdatedAt = time.Now()
	
	if t.ProcessingStatus == ProcessingDocuments {
		t.ProcessingStatus = ProcessingProducts
	}
}

// –û—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ —Ç–æ–≤–∞—Ä—ã –∏–∑–≤–ª–µ—á–µ–Ω—ã
func (t *Tender) MarkProductsExtracted() {
	t.ProductsExtracted = true
	t.UpdatedAt = time.Now()
	
	if t.ProcessingStatus == ProcessingProducts {
		t.ProcessingStatus = ProcessingSuppliers
	}
}

// –û—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏ –Ω–∞–π–¥–µ–Ω—ã –∏ —Å–≤—è–∑—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
func (t *Tender) MarkSuppliersContacted() {
	t.SuppliersContacted = true
	t.UpdatedAt = time.Now()
	
	if t.ProcessingStatus == ProcessingContacting {
		t.ProcessingStatus = ProcessingCompleted
	}
}

// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ–Ω–¥–µ—Ä–∞
func (t *Tender) SetResults(winnerCompany string, winnerPrice float64, totalParticipants int) error {
	if winnerPrice < 0 {
		return ErrInvalidPrice
	}
	
	t.WinnerCompany = winnerCompany
	t.WinnerPrice = winnerPrice
	t.TotalParticipants = totalParticipants
	
	// –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å–∫–∏–¥–∫—É
	if t.StartPrice > 0 {
		t.WinnerDiscount = ((t.StartPrice - winnerPrice) / t.StartPrice) * 100
	}
	
	t.Status = StatusCompleted
	t.UpdatedAt = time.Now()
	
	return nil
}

// –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
func (t *Tender) UpdateProcessingStatus(status ProcessingStatus) {
	t.ProcessingStatus = status
	t.UpdatedAt = time.Now()
}

// üîç –ú–ï–¢–û–î–´ –ó–ê–ü–†–û–°–û–í

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ç–µ–Ω–¥–µ—Ä
func (t *Tender) IsActive() bool {
	return t.Status == StatusActive && time.Now().Before(t.SubmissionEnd)
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –ª–∏ –ø—Ä–∏–µ–º –∑–∞—è–≤–æ–∫
func (t *Tender) IsSubmissionClosed() bool {
	return time.Now().After(t.SubmissionEnd)
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω –ª–∏ —Ç–µ–Ω–¥–µ—Ä –¥–ª—è —É—á–∞—Å—Ç–∏—è
func (t *Tender) IsRelevant() bool {
	return t.IsMedical && 
		   t.IsGoods && 
		   t.AIRelevanceScore >= 0.7 &&
		   t.AIRecommendation == RecommendationParticipate
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≥–æ—Ç–æ–≤ –ª–∏ —Ç–µ–Ω–¥–µ—Ä –¥–ª—è —É—á–∞—Å—Ç–∏—è
func (t *Tender) IsReadyForParticipation() bool {
	return t.DocumentsDownloaded &&
		   t.ProductsExtracted &&
		   t.SuppliersContacted &&
		   t.ProcessingStatus == ProcessingCompleted
}

// –ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫
func (t *Tender) TimeUntilSubmissionEnd() time.Duration {
	return time.Until(t.SubmissionEnd)
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É—á–∞—Å—Ç–∏—è
func (t *Tender) HasSufficientTime(minDays int) bool {
	return t.TimeUntilSubmissionEnd() > time.Duration(minDays)*24*time.Hour
}

// üîß –ü–†–ò–í–ê–¢–ù–´–ï –§–£–ù–ö–¶–ò–ò –í–ê–õ–ò–î–ê–¶–ò–ò

func validateURL(rawURL string) error {
	if rawURL == "" {
		return ErrInvalidURL
	}
	
	u, err := url.Parse(rawURL)
	if err != nil {
		return fmt.Errorf("%w: %v", ErrInvalidURL, err)
	}
	
	if u.Scheme == "" || u.Host == "" {
		return ErrInvalidURL
	}
	
	return nil
}

func validatePlatform(platform string) error {
	validPlatforms := map[string]bool{
		"zakupki.gov.ru":    true,
		"szvo.gov35.ru":     true,
		"gz-spb.ru":         true,
		"gz-nn.ru":          true,
		"gz.mos.ru":         true,
		"aggregator-kkr.ru": true,
		"roseltorg.ru":      true,
		"b2b-center.ru":     true,
		"sberbank-ast.ru":   true,
		"fabrikant.ru":      true,
	}
	
	if !validPlatforms[platform] {
		return ErrInvalidPlatform
	}
	
	return nil
}

// üìä –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò

// –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è UI
func (s TenderStatus) Color() string {
	switch s {
	case StatusActive:
		return "green"
	case StatusCompleted:
		return "blue"
	case StatusCancelled:
		return "red"
	case StatusPostponed:
		return "yellow"
	default:
		return "gray"
	}
}

// –ü–æ–ª—É—á–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
func (c TenderCategory) DisplayName() string {
	switch c {
	case CategoryMedicalEquipment:
		return "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
	case CategoryMedicalSupplies:
		return "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏"
	case CategoryLaboratoryEquip:
		return "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
	case CategoryDiagnosticEquip:
		return "–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
	case CategorySurgicalEquip:
		return "–•–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
	case CategoryRehabilitationEquip:
		return "–†–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–æ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
	default:
		return "–ü—Ä–æ—á–µ–µ"
	}
}

// –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
func (p ProcessingStatus) Progress() int {
	switch p {
	case ProcessingNew:
		return 0
	case ProcessingDiscovered:
		return 10
	case ProcessingAnalyzing:
		return 20
	case ProcessingDocuments:
		return 40
	case ProcessingProducts:
		return 60
	case ProcessingSuppliers:
		return 80
	case ProcessingContacting:
		return 90
	case ProcessingCompleted:
		return 100
	case ProcessingFailed, ProcessingSkipped:
		return 0
	default:
		return 0
	}
}
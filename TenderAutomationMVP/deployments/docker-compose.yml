# =====================================================================
# üê≥ DOCKER COMPOSE –î–õ–Ø TENDER AUTOMATION MVP
# =====================================================================
#
# –≠—Ç–æ—Ç —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
# –í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã:
# - PostgreSQL (–æ—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
# - Ollama (AI —Å–µ—Ä–≤–∏—Å –¥–ª—è Llama –º–æ–¥–µ–ª–∏)
# - Redis (–∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ, –æ—á–µ—Ä–µ–¥–∏) - –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
# - Application (—Å–∞–º–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
#
# TODO: –ü—Ä–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ–±–∞–≤–∏—Ç—å:
# - Elasticsearch (–ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫)
# - Grafana + Prometheus (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)
# - MinIO (—Ñ–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ)
# - NGINX (reverse proxy)

version: '3.8'

services:
  # =====================================================================
  # üóÉÔ∏è POSTGRESQL - –û—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  # =====================================================================
  postgres:
    image: postgres:15-alpine
    container_name: tender_postgres
    restart: unless-stopped
    
    # üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    environment:
      POSTGRES_DB: tender_automation
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_123}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    
    # üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    command: |
      postgres
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.7
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
    
    # üóÇÔ∏è –¢–æ–º–∞ –¥–∞–Ω–Ω—ã—Ö
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d/migrations:ro
    
    # üåê –°–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    ports:
      - "${DB_PORT:-5432}:5432"
    
    # üîç Health check
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tender_automation"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    # üè∑Ô∏è –ú–µ—Ç–∫–∏ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    labels:
      - "tender-automation.service=database"
      - "tender-automation.environment=development"

  # =====================================================================
  # ü§ñ OLLAMA - AI —Å–µ—Ä–≤–∏—Å –¥–ª—è Llama –º–æ–¥–µ–ª–∏
  # =====================================================================
  ollama:
    image: ollama/ollama:latest
    container_name: tender_ollama
    restart: unless-stopped
    
    # üóÇÔ∏è –¢–æ–º–∞ –¥–ª—è –º–æ–¥–µ–ª–µ–π
    volumes:
      - ollama_data:/root/.ollama
    
    # üåê –°–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    
    # üîç Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # üè∑Ô∏è –ú–µ—Ç–∫–∏
    labels:
      - "tender-automation.service=ai"
      - "tender-automation.environment=development"
    
    # üìä –†–µ—Å—É—Ä—Å—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è)
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '2.0'
    #       memory: 4G
    #     reservations:
    #       cpus: '1.0'
    #       memory: 2G

  # =====================================================================
  # üî¥ REDIS - –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—á–µ—Ä–µ–¥–∏ (–¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
  # =====================================================================
  redis:
    image: redis:7-alpine
    container_name: tender_redis
    restart: unless-stopped
    
    # ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Redis
    command: |
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 60 1
    
    # üóÇÔ∏è –¢–æ–º –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
    volumes:
      - redis_data:/data
    
    # üåê –°–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    ports:
      - "${REDIS_PORT:-6379}:6379"
    
    # üîç Health check
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    
    # üè∑Ô∏è –ú–µ—Ç–∫–∏
    labels:
      - "tender-automation.service=cache"
      - "tender-automation.environment=development"

  # =====================================================================
  # üöÄ APPLICATION - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  # =====================================================================
  app:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      target: development  # –ò—Å–ø–æ–ª—å–∑—É–µ–º development —Å—Ç–∞–¥–∏—é
    
    container_name: tender_app
    restart: unless-stopped
    
    # üîó –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
      redis:
        condition: service_healthy
    
    # üåê –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    environment:
      # üóÉÔ∏è Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-secure_password_123}
      DB_NAME: tender_automation
      DB_SSLMODE: disable
      
      # ü§ñ AI
      AI_URL: http://ollama:11434
      AI_MODEL: ${AI_MODEL:-llama2}
      AI_TIMEOUT: 60s
      
      # üî¥ Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # üñ•Ô∏è Server
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
      SERVER_MODE: debug
      
      # üìù Logging
      LOG_LEVEL: debug
      LOG_FORMAT: console
      LOG_OUTPUT: stdout
      
      # üéØ Business
      MIN_AI_SCORE_THRESHOLD: 0.7
      DEFAULT_PAGE_SIZE: 20
      MAX_PAGE_SIZE: 100
    
    # üóÇÔ∏è –¢–æ–º–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    volumes:
      - ..:/app:ro  # Read-only –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
      - app_cache:/app/.cache  # –ö–µ—à –¥–ª—è Go –º–æ–¥—É–ª–µ–π
    
    # üåê –°–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    ports:
      - "${SERVER_PORT:-8080}:8080"
    
    # üîç Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # üè∑Ô∏è –ú–µ—Ç–∫–∏
    labels:
      - "tender-automation.service=api"
      - "tender-automation.environment=development"
    
    # üîß –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –¥–ª—è development
    command: |
      sh -c "
        echo 'üöÄ Starting Tender Automation MVP...'
        echo '‚è≥ Waiting for dependencies...'
        sleep 10
        echo 'üîß Running migrations...'
        # TODO: –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –º–∏–≥—Ä–∞—Ü–∏–π
        echo 'üåê Starting API server...'
        go run cmd/api/main.go
      "
    
    # üìä –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
    working_dir: /app

# =====================================================================
# üóÇÔ∏è –ò–ú–ï–ù–û–í–ê–ù–ù–´–ï –¢–û–ú–ê
# =====================================================================
volumes:
  # PostgreSQL –¥–∞–Ω–Ω—ã–µ
  postgres_data:
    driver: local
    labels:
      - "tender-automation.volume=database"

  # Ollama –º–æ–¥–µ–ª–∏ –∏ –¥–∞–Ω–Ω—ã–µ
  ollama_data:
    driver: local
    labels:
      - "tender-automation.volume=ai-models"

  # Redis –¥–∞–Ω–Ω—ã–µ
  redis_data:
    driver: local
    labels:
      - "tender-automation.volume=cache"

  # –ö–µ—à –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  app_cache:
    driver: local
    labels:
      - "tender-automation.volume=app-cache"

# =====================================================================
# üåê –°–ï–¢–ò
# =====================================================================
networks:
  default:
    name: tender_automation_network
    labels:
      - "tender-automation.network=main"

# =====================================================================
# üîß –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ
# =====================================================================

# TODO: –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Docker Compose:
#
# üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:
#   docker-compose up -d
#
# üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:
#   docker-compose logs -f app
#   docker-compose logs -f postgres
#   docker-compose logs -f ollama
#
# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:
#   docker-compose ps
#   docker-compose top
#
# üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:
#   docker-compose down
#
# üóëÔ∏è –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–≤–∫–ª—é—á–∞—è —Ç–æ–º–∞):
#   docker-compose down -v --remove-orphans
#
# üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞:
#   docker-compose restart app
#
# üìä –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:
#   docker-compose exec postgres psql -U postgres -d tender_automation
#
# ü§ñ –ó–∞–≥—Ä—É–∑–∫–∞ AI –º–æ–¥–µ–ª–∏:
#   docker-compose exec ollama ollama pull llama2
#   docker-compose exec ollama ollama list
#
# üê≥ –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤:
#   docker stats $(docker-compose ps -q)
#
# üîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:
#   docker-compose exec app go mod tidy
#   docker-compose exec app go test ./...
#
# üìù –ú–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:
#   docker-compose exec app migrate -path migrations -database "postgres://postgres:password@postgres:5432/tender_automation?sslmode=disable" up
#
# =====================================================================
# üåç –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø
# =====================================================================

# TODO: –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:
#
# # Database
# DB_PASSWORD=your_secure_password
# DB_PORT=5432
#
# # AI
# AI_MODEL=llama2
# OLLAMA_PORT=11434
#
# # Application
# SERVER_PORT=8080
# LOG_LEVEL=debug
#
# # Redis
# REDIS_PORT=6379

# =====================================================================
# üîí –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ –î–õ–Ø PRODUCTION
# =====================================================================

# TODO: –î–ª—è production –æ–∫—Ä—É–∂–µ–Ω–∏—è:
#
# 1. üîê –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã –≤–º–µ—Å—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:
#    secrets:
#      db_password:
#        file: ./secrets/db_password.txt
#
# 2. üåê –ù–∞—Å—Ç—Ä–æ–π—Ç–µ reverse proxy (nginx):
#    - –¢–µ—Ä–º–∏–Ω–∞—Ü–∏—è SSL
#    - –°–∂–∞—Ç–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
#    - Rate limiting
#    - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞
#
# 3. üõ°Ô∏è –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:
#    - –£–±–µ—Ä–∏—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –ø–æ—Ä—Ç–æ–≤ –ë–î –∏ Redis
#    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ internal networks
#    - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ firewall –ø—Ä–∞–≤–∏–ª–∞
#
# 4. üìä –î–æ–±–∞–≤—å—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:
#    - Prometheus + Grafana
#    - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ ELK stack
#    - Health checks –∏ alerting
#
# 5. üîÑ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ backup:
#    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π backup PostgreSQL
#    - –†–µ–ø–ª–∏–∫–∞—Ü–∏—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
#    - Disaster recovery –ø–ª–∞–Ω

# =====================================================================
# ‚úÖ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï
# =====================================================================

# –≠—Ç–æ—Ç Docker Compose —Ñ–∞–π–ª –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç:
# ‚úÖ –ü–æ–ª–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
# ‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
# ‚úÖ Health checks –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
# ‚úÖ –¢–æ–º–∞ –¥–ª—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
# ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
# ‚úÖ –ú–µ—Ç–∫–∏ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
#
# –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:
# 1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env
# 2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose up -d
# 3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: curl http://localhost:8080/health
# 4. –ó–∞–≥—Ä—É–∑–∏—Ç–µ AI –º–æ–¥–µ–ª—å: docker-compose exec ollama ollama pull llama2
// üèõÔ∏è –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –®–ê–ë–õ–û–ù DOMAIN ENTITY –¥–ª—è Clean Architecture
//
// ‚úÖ –í–°–ï–ì–î–ê –æ–¥–∏–Ω–∞–∫–æ–≤–æ:
// - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞ —Å –¥–æ–º–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª—å—é
// - –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π (New{Entity})
// - –î–æ–º–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ (Err{Something})
// - –ú–µ—Ç–æ–¥—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
// - –ù–ï–¢ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π!
//
// üîÄ –ú–ï–ù–Ø–ï–¢–°–Ø –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–µ–∫—Ç–∞:
// - –ù–∞–∑–≤–∞–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏ (User, Product, Order, etc.)
// - –ü–æ–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
// - –î–æ–º–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
// - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã

package example_entity // üîÄ –ò–ó–ú–ï–ù–ò–¢–ï: –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏ (user, product, order, etc.)

import (
	"errors"
	"regexp"
	"time"
	
	// ‚úÖ –í–°–ï–ì–î–ê: —Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Go!
	// ‚ùå –ù–ï –ò–ú–ü–û–†–¢–ò–†–£–ô–¢–ï: gorm, database/sql, http, json, –∏ –¥—Ä—É–≥–∏–µ –≤–Ω–µ—à–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
)

// üèóÔ∏è –î–û–ú–ï–ù–ù–ê–Ø –ú–û–î–ï–õ–¨
// ‚úÖ –í–°–ï–ì–î–ê: –æ—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—É—â–Ω–æ—Å—Ç–∏
type ExampleEntity struct { // üîÄ –ò–ó–ú–ï–ù–ò–¢–ï: –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏ (User, Product, Order, etc.)
	
	// ‚úÖ –í–°–ï–ì–î–ê: –±–∞–∑–æ–≤—ã–µ –ø–æ–ª—è (–ø–æ—á—Ç–∏ –¥–ª—è –≤—Å–µ—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π)
	ID        uint      `json:"id"`         // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
	CreatedAt time.Time `json:"created_at"` // –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è
	UpdatedAt time.Time `json:"updated_at"` // –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
	
	// üîÄ –î–û–ë–ê–í–¨–¢–ï: —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –≤–∞—à–µ–π —Å—É—â–Ω–æ—Å—Ç–∏
	// –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π:
	
	// –î–õ–Ø USER:
	// Email          string `json:"email"`
	// HashedPassword string `json:"-"`        // –ù–ï —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ JSON
	// Name           string `json:"name"`
	// IsActive       bool   `json:"is_active"`
	// Role           string `json:"role"`     // admin, user, moderator
	
	// –î–õ–Ø PRODUCT:
	// Name        string  `json:"name"`
	// Description string  `json:"description"`
	// Price       float64 `json:"price"`
	// SKU         string  `json:"sku"`        // –ê—Ä—Ç–∏–∫—É–ª
	// CategoryID  uint    `json:"category_id"`
	// IsAvailable bool    `json:"is_available"`
	// Stock       int     `json:"stock"`      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ
	
	// –î–õ–Ø ORDER:
	// UserID      uint    `json:"user_id"`
	// TotalAmount float64 `json:"total_amount"`
	// Status      string  `json:"status"`     // pending, confirmed, shipped, delivered
	// ShippingAddress string `json:"shipping_address"`
	
	// üîÄ –í–ê–®–ò –ü–û–õ–Ø:
	SampleField string `json:"sample_field"` // üîÄ –ó–ê–ú–ï–ù–ò–¢–ï –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
}

// üö® –î–û–ú–ï–ù–ù–´–ï –û–®–ò–ë–ö–ò
// ‚úÖ –í–°–ï–ì–î–ê: –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –æ—à–∏–±–∫–∏ –¥–ª—è –≤–∞—à–µ–π —Å—É—â–Ω–æ—Å—Ç–∏
var (
	// üîÄ –ò–ó–ú–ï–ù–ò–¢–ï: –æ—à–∏–±–∫–∏ –ø–æ–¥ –≤–∞—à—É —Å—É—â–Ω–æ—Å—Ç—å
	ErrInvalidExampleEntity     = errors.New("invalid example entity")          // üîÄ –ò–ó–ú–ï–ù–ò–¢–ï
	ErrEmptySampleField        = errors.New("sample field cannot be empty")     // üîÄ –ò–ó–ú–ï–ù–ò–¢–ï
	ErrExampleEntityNotFound   = errors.New("example entity not found")         // üîÄ –ò–ó–ú–ï–ù–ò–¢–ï
	ErrExampleEntityExists     = errors.New("example entity already exists")    // üîÄ –ò–ó–ú–ï–ù–ò–¢–ï
	
	// –ü–†–ò–ú–ï–†–´ –æ—à–∏–±–æ–∫ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π:
	
	// –î–õ–Ø USER:
	// ErrInvalidEmail     = errors.New("invalid email format")
	// ErrWeakPassword     = errors.New("password too weak")
	// ErrUserNotFound     = errors.New("user not found")
	// ErrUserExists       = errors.New("user already exists")
	// ErrEmptyName        = errors.New("name cannot be empty")
	// ErrInvalidRole      = errors.New("invalid user role")
	
	// –î–õ–Ø PRODUCT:
	// ErrInvalidPrice     = errors.New("price must be positive")
	// ErrEmptyName        = errors.New("product name cannot be empty")
	// ErrInvalidSKU       = errors.New("invalid SKU format")
	// ErrOutOfStock       = errors.New("product out of stock")
	// ErrProductNotFound  = errors.New("product not found")
	
	// –î–õ–Ø ORDER:
	// ErrInvalidAmount    = errors.New("invalid order amount")
	// ErrInvalidStatus    = errors.New("invalid order status")
	// ErrOrderNotFound    = errors.New("order not found")
	// ErrEmptyAddress     = errors.New("shipping address cannot be empty")
)

// üè≠ –ö–û–ù–°–¢–†–£–ö–¢–û–†
// ‚úÖ –í–°–ï–ì–î–ê: –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –¥–æ–º–µ–Ω–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª
func NewExampleEntity( /* üîÄ –ü–ê–†–ê–ú–ï–¢–†–´ –ø–æ–¥ –≤–∞—à—É —Å—É—â–Ω–æ—Å—Ç—å */ sampleField string) (*ExampleEntity, error) {
	
	// ‚úÖ –í–°–ï–ì–î–ê: –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
	if err := validateSampleField(sampleField); err != nil { // üîÄ –ò–ó–ú–ï–ù–ò–¢–ï: –≤–∞–ª–∏–¥–∞—Ü–∏—è
		return nil, err
	}
	
	// üîÄ –î–û–ë–ê–í–¨–¢–ï: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–æ–¥ –≤–∞—à—É —Å—É—â–Ω–æ—Å—Ç—å
	// –ü—Ä–∏–º–µ—Ä—ã:
	// if err := validateEmail(email); err != nil {
	//     return nil, err
	// }
	// if err := validatePrice(price); err != nil {
	//     return nil, err
	// }
	
	// ‚úÖ –í–°–ï–ì–î–ê: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫
	now := time.Now()
	
	return &ExampleEntity{
		// ‚úÖ –í–°–ï–ì–î–ê: –±–∞–∑–æ–≤—ã–µ –ø–æ–ª—è
		CreatedAt: now,
		UpdatedAt: now,
		
		// üîÄ –í–ê–®–ò –ü–û–õ–Ø:
		SampleField: sampleField, // üîÄ –ó–ê–ú–ï–ù–ò–¢–ï –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
		
		// –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π:
		// Email:          email,
		// HashedPassword: hashedPassword,
		// Name:           name,
		// IsActive:       true,
		// Role:           "user",
		
		// Name:        name,
		// Description: description,
		// Price:       price,
		// SKU:         sku,
		// IsAvailable: true,
		// Stock:       stock,
	}, nil
}

// üîß –ú–ï–¢–û–î–´ –î–õ–Ø –ò–ó–ú–ï–ù–ï–ù–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø
// ‚úÖ –í–°–ï–ì–î–ê: –º–µ—Ç–æ–¥—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π

// üîÄ –ò–ó–ú–ï–ù–ò–¢–ï: –º–µ—Ç–æ–¥—ã –ø–æ–¥ –≤–∞—à—É —Å—É—â–Ω–æ—Å—Ç—å
func (e *ExampleEntity) UpdateSampleField(newValue string) error {
	if err := validateSampleField(newValue); err != nil {
		return err
	}
	
	e.SampleField = newValue
	e.UpdatedAt = time.Now() // ‚úÖ –í–°–ï–ì–î–ê: –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è
	return nil
}

// üìù –ü–†–ò–ú–ï–†–´ –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π:

// –î–õ–Ø USER:
// func (u *User) UpdateEmail(newEmail string) error {
//     if err := validateEmail(newEmail); err != nil {
//         return err
//     }
//     u.Email = newEmail
//     u.UpdatedAt = time.Now()
//     return nil
// }
//
// func (u *User) UpdateName(newName string) error {
//     if newName == "" {
//         return ErrEmptyName
//     }
//     u.Name = newName
//     u.UpdatedAt = time.Now()
//     return nil
// }
//
// func (u *User) SetPassword(hashedPassword string) error {
//     if hashedPassword == "" {
//         return ErrWeakPassword
//     }
//     u.HashedPassword = hashedPassword
//     u.UpdatedAt = time.Now()
//     return nil
// }
//
// func (u *User) Activate() {
//     u.IsActive = true
//     u.UpdatedAt = time.Now()
// }
//
// func (u *User) Deactivate() {
//     u.IsActive = false
//     u.UpdatedAt = time.Now()
// }

// –î–õ–Ø PRODUCT:
// func (p *Product) UpdatePrice(newPrice float64) error {
//     if newPrice <= 0 {
//         return ErrInvalidPrice
//     }
//     p.Price = newPrice
//     p.UpdatedAt = time.Now()
//     return nil
// }
//
// func (p *Product) UpdateStock(newStock int) error {
//     if newStock < 0 {
//         return ErrInvalidStock
//     }
//     p.Stock = newStock
//     p.UpdatedAt = time.Now()
//     return nil
// }
//
// func (p *Product) MakeAvailable() {
//     p.IsAvailable = true
//     p.UpdatedAt = time.Now()
// }
//
// func (p *Product) MakeUnavailable() {
//     p.IsAvailable = false
//     p.UpdatedAt = time.Now()
// }

// –î–õ–Ø ORDER:
// func (o *Order) ConfirmOrder() error {
//     if o.Status != "pending" {
//         return ErrInvalidStatus
//     }
//     o.Status = "confirmed"
//     o.UpdatedAt = time.Now()
//     return nil
// }
//
// func (o *Order) ShipOrder() error {
//     if o.Status != "confirmed" {
//         return ErrInvalidStatus
//     }
//     o.Status = "shipped"
//     o.UpdatedAt = time.Now()
//     return nil
// }

// üîç –ú–ï–¢–û–î–´ –ó–ê–ü–†–û–°–û–í (–ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø)
// ‚úÖ –í–°–ï–ì–î–ê: –º–µ—Ç–æ–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è

// üîÄ –ò–ó–ú–ï–ù–ò–¢–ï: –º–µ—Ç–æ–¥—ã –ø–æ–¥ –≤–∞—à—É —Å—É—â–Ω–æ—Å—Ç—å
func (e *ExampleEntity) IsValid() bool {
	return e.SampleField != "" // üîÄ –ò–ó–ú–ï–ù–ò–¢–ï: –ª–æ–≥–∏–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
}

// üìù –ü–†–ò–ú–ï–†–´ –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π:

// –î–õ–Ø USER:
// func (u *User) IsActive() bool {
//     return u.IsActive
// }
//
// func (u *User) IsAdmin() bool {
//     return u.Role == "admin"
// }
//
// func (u *User) HasValidEmail() bool {
//     return validateEmail(u.Email) == nil
// }

// –î–õ–Ø PRODUCT:
// func (p *Product) IsAvailable() bool {
//     return p.IsAvailable && p.Stock > 0
// }
//
// func (p *Product) IsInStock() bool {
//     return p.Stock > 0
// }
//
// func (p *Product) CanOrder(quantity int) bool {
//     return p.IsAvailable && p.Stock >= quantity
// }

// –î–õ–Ø ORDER:
// func (o *Order) IsPending() bool {
//     return o.Status == "pending"
// }
//
// func (o *Order) IsCompleted() bool {
//     return o.Status == "delivered"
// }
//
// func (o *Order) CanBeCancelled() bool {
//     return o.Status == "pending" || o.Status == "confirmed"
// }

// üîß –ü–†–ò–í–ê–¢–ù–´–ï –§–£–ù–ö–¶–ò–ò –í–ê–õ–ò–î–ê–¶–ò–ò
// ‚úÖ –í–°–ï–ì–î–ê: –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏

// üîÄ –ò–ó–ú–ï–ù–ò–¢–ï: –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–æ–¥ –≤–∞—à—É —Å—É—â–Ω–æ—Å—Ç—å
func validateSampleField(field string) error {
	if field == "" {
		return ErrEmptySampleField
	}
	// üîÄ –î–û–ë–ê–í–¨–¢–ï: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é
	return nil
}

// üìù –ü–†–ò–ú–ï–†–´ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π:

// –î–õ–Ø USER:
// var emailRegex = regexp.MustCompile(`^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$`)
//
// func validateEmail(email string) error {
//     if email == "" {
//         return ErrEmptyEmail
//     }
//     if !emailRegex.MatchString(email) {
//         return ErrInvalidEmail
//     }
//     return nil
// }
//
// func validatePassword(password string) error {
//     if len(password) < 8 {
//         return ErrWeakPassword
//     }
//     // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è
//     return nil
// }

// –î–õ–Ø PRODUCT:
// var skuRegex = regexp.MustCompile(`^[A-Z0-9\-]+$`)
//
// func validateSKU(sku string) error {
//     if sku == "" {
//         return ErrEmptySKU
//     }
//     if !skuRegex.MatchString(sku) {
//         return ErrInvalidSKU
//     }
//     return nil
// }
//
// func validatePrice(price float64) error {
//     if price <= 0 {
//         return ErrInvalidPrice
//     }
//     return nil
// }

// üìö –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ê–î–ê–ü–¢–ê–¶–ò–ò:
//
// 1. üîÄ –ü–ï–†–ï–ò–ú–ï–ù–£–ô–¢–ï —Ñ–∞–π–ª –∏ –ø–∞–∫–µ—Ç:
//    example_entity ‚Üí user (–∏–ª–∏ product, order, etc.)
//
// 2. üîÄ –ó–ê–ú–ï–ù–ò–¢–ï ExampleEntity:
//    –ù–∞ User, Product, Order –∏–ª–∏ –≤–∞—à—É —Å—É—â–Ω–æ—Å—Ç—å
//
// 3. üîÄ –û–ü–†–ï–î–ï–õ–ò–¢–ï –ø–æ–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:
//    –î–æ–±–∞–≤—å—Ç–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–æ–ª—è –≤–º–µ—Å—Ç–æ SampleField
//
// 4. üîÄ –°–û–ó–î–ê–ô–¢–ï –¥–æ–º–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:
//    –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –æ—à–∏–±–∫–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –≤–∞—à–µ–π —Å—É—â–Ω–æ—Å—Ç–∏
//
// 5. üîÄ –ê–î–ê–ü–¢–ò–†–£–ô–¢–ï –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä:
//    –ò–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–æ–¥ –≤–∞—à—É –ª–æ–≥–∏–∫—É
//
// 6. üîÄ –î–û–ë–ê–í–¨–¢–ï –º–µ—Ç–æ–¥—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è:
//    –°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π –≤–∞—à–µ–π —Å—É—â–Ω–æ—Å—Ç–∏
//
// 7. üîÄ –î–û–ë–ê–í–¨–¢–ï –º–µ—Ç–æ–¥—ã –∑–∞–ø—Ä–æ—Å–æ–≤:
//    –°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
//
// 8. üîÄ –†–ï–ê–õ–ò–ó–£–ô–¢–ï –≤–∞–ª–∏–¥–∞—Ü–∏—é:
//    –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –≤–∞—à–∏—Ö –ø–æ–ª–µ–π
//
// 9. ‚úÖ –í–°–ï–ì–î–ê —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ:
//    - –ù–ï–¢ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
//    - –í–∞–ª–∏–¥–∞—Ü–∏—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –∏ –º–µ—Ç–æ–¥–∞—Ö
//    - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UpdatedAt –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
//    - –î–æ–º–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –¥–ª—è –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª